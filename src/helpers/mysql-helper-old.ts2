import './dotenv-init.js';
import mysql, { QueryError } from 'mysql2/promise';

let cprev: mysql.Connection;
export async function createConnectionA() {
  if (cprev) {
    cprev.destroy();
  }
  const c = await mysql.createConnection({
    port: parseInt(process.env.MYSQL_PORT),
    user: process.env.MYSQL_USER,
    password: process.env.MYSQL_PASSWORD,
    database: process.env.MYSQL_DBNAME,
    host: process.env.MYSQL_HOST,
    namedPlaceholders: true,
  });
  cprev = c;

  /*
  c.connect((err: QueryError | null) => {
    // The server is either down
    if (err) {
      // or restarting (takes a while sometimes).
      console.log('error when connecting to db:', err);
      setTimeout(createConnectionA, 2000); // We introduce a delay before attempting to reconnect,
    } // to avoid a hot loop, and to allow our node script to process asynchronous requests in the meantime.
  });
*/
  // If you're also serving http, display a 503 error.
  c.on('error', function (err) {
    console.error('db error event on', err);
    if (err.code === 'PROTOCOL_CONNECTION_LOST') {
      // Connection to the MySQL server is usually
      setTimeout(createConnectionA, 1000);
    } else {
      // connnection idle timeout (the wait_timeout
      throw err; // server variable configures this)
    }
  });
  return c;
}
